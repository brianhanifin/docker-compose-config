version: '3.6'
services:
  letsencrypt:
    container_name: letsencrypt
    environment:
      - EMAIL=code@example.com
      - SUBDOMAINS=hass,hub,plex
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
      - URL=home.example.com
    image: linuxserver/letsencrypt
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - /opt/letsencrypt:/config:rw
      - /etc/localtime:/etc/localtime:ro

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    ports:
      - 1883:1883
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/mosquitto:/mosquitto/config:ro
      - /opt/mosquitto:/mosquitto/data:rw
      - /opt/mosquitto:/mosquitto/log:rw

  esphome:
    container_name: esphome
    image: esphome/esphome
    #image: esphome/esphome:dev
    # devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    network_mode: host
    ports:
      - 6052:6052
      - 6123:6123
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/esphome:/config

  influxdb:
    image: influxdb
    container_name: influxdb
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://127.0.0.1:8086/ping"]
      interval: 30s
      timeout: 1s
      retries: 24
    #network_mode: host
    ports:
      - 8083:8083
      - 8086:8086
    restart: unless-stopped
    volumes:
      - /opt/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - /opt/influxdb:/var/lib/influxdb

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    ports:
      - 3000:3000
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      - /opt/grafana:/etc/grafana:rw
      - /opt/grafana:/var/lib/grafana:rw

  homeassistant:
    image: homeassistant/home-assistant
    #image: homeassistant/home-assistant:0.91.3
    #image: homeassistant/home-assistant:0.92.0b2
    #image: homeassistant/home-assistant:rc
    #image: homeassistant/home-assistant:dev
    # build:
    #   context: ./homeassistant/docker
    container_name: homeassistant
    depends_on:
      - mysql
      - mosquitto
    # /dev/ttyACM0
    # /dev/serial/by-id/usb-0658_0200-if00
    # /dev/ttyACM1
    # /dev/serial/by-id/usb-Rainforest_Automation__Inc._RFA-Z105-2_HW2.7.3_EMU-2-if00
    devices:
      - /dev/serial/by-id/usb-0658_0200-if00:/zwaveusbstick
      - /dev/serial/by-id/usb-Rainforest_Automation__Inc._RFA-Z105-2_HW2.7.3_EMU-2-if00:/rainforestemu2
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: "30s"
      timeout: "10s"
      retries: "6"
    logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
    network_mode: host
    ports:
      - "8123:8123"
    restart: unless-stopped
    volumes:
      - /opt/homeassistant/config:/config
      - /opt/homeassistant/icons/:/usr/local/lib/python3.6/site-packages/hass_frontend/icons/
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro

  # hass_playground:
  #   image: homeassistant/home-assistant
  #   #image: homeassistant/home-assistant:rc
  #   #image: homeassistant/home-assistant:dev
  #   container_name: hass_playground
  #   depends_on:
  #     influxdb:
  #       condition: service_healthy
  #     mosquitto:
  #       condition: service_started
  #   environment:
  #     - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 6
  #   ##network_mode: host
  #   ports:
  #     - "9123:8123"
  #   #restart: unless-stopped
  #   volumes:
  #     - /opt/homeassistant/config_dev:/config
  #     - /etc/letsencrypt:/etc/letsencrypt:ro
  #     - /etc/localtime:/etc/localtime:ro

  portainer:
    image: portainer/portainer
    container_name: portainer
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    ports:
      - 900:9000
    restart: unless-stopped
    volumes:
      - /opt/portainer:/data:rw
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro

  mysql:
    image: mariadb
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ekdUgWmminRWPBNVnc6Yfrzh
      MYSQL_DATABASE: homeassistant
    ports:
      - 3306:3306
    restart: unless-stopped
    volumes:
      - "/opt/mysql:/var/lib/mysql"
      - /etc/localtime:/etc/localtime:ro

  dockermon:
    image: philhawthorne/ha-dockermon
    container_name: dockermon
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    ports:
      - 8126:8126
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/dockermon:/config

  # custom-component-store:
  #   image: ludeeus/custom-component-store
  #   container_name: custom-component-store
  #   environment:
  #     - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
  #     - USERNAME=
  #     - PASSWORD=
  #   ports:
  #     - 8111:8100
  #   restart: unless-stopped
  #   volumes:
  #     - /opt/homeassistant/config:/config

  nodered:
    image: nodered/node-red-docker:v8
    container_name: nodered
    depends_on:
      - mosquitto
      - homeassistant
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:1880"]
      interval: 30s
      timeout: 10s
      retries: 5
    #links:
    #  # Link ports from home-assistant container
    #  - homeassistant
    ports:
      - 1880:1880
      - 9229:9229
    restart: unless-stopped
    #user: root
    user: "1000:1000"
    volumes:
      - /opt/nodered:/data
  #     - /etc/letsencrypt/live/home.brianhanifin.com-0001/:/certs:ro
  #     - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
      - PUID=1000
      - PGID=1000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:80"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 81:80
    restart: unless-stopped
    volumes:
      - /opt/heimdall/config:/config
      - /etc/localtime:/etc/localtime:ro

  plex:
    container_name: plex
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    image: plexinc/pms-docker
    ports:
      - 1900:1900/udp
      - 3005:3005/tcp
      - 32400:32400/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469/tcp
      - 8324:8324/tcp
    restart: unless-stopped
    volumes:
      - /opt/plex/temp:/transcode:rw
      - /opt/plex:/config:rw
      - /media/backup:/data:rw
      - /etc/localtime:/etc/localtime:ro

  # tasmoadmin:
  #   image: raymondmm/tasmoadmin
  #   container_name: tasmoadmin
  #   environment:
  #     - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
  #   ports:
  #     - 9999:80/tcp
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /opt/tasmoadmin:/data

  # wireguard:
  #   container_name: wireguard
  #   environment:
  #     - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
  #   image: activeeos/wireguard-docker
  #   ports:
  #     - 5555:5555/udp
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #   restart: unless-stopped
  #   volumes:
  #     - /opt/wireguard:/etc/wireguard
  #     - /lib/modules:/lib/modules
  #     - /lib/wireguard:/lib/wireguard
  #     - /usr/src:/usr/src:ro

  # appdaemon:
  #   image: acockburn/appdaemon
  #   #image: acockburn/appdaemon:dev
  #   container_name: appdaemon
  #   depends_on:
  #     - homeassistant
  #   environment:
  #     - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://127.0.0.1:5050"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #   links:
  #     # Link ports from home-assistant container
  #     - homeassistant
  #   ##network_mode: bridge
  #   ports:
  #     - 5050:5050
  #     - 5001:5001
  #   restart: unless-stopped
  #   volumes:
  #     #- /opt/appdaemon:/conf
  #     - /opt/homeassistant/config/:/config
  #     - /opt/homeassistant/config/appdaemon:/conf
  #     - /etc/letsencrypt/live/home.brianhanifin.com-0001/:/certs:ro
  #     - /etc/letsencrypt:/etc/letsencrypt:ro
  #     - /etc/localtime:/etc/localtime:ro

  unifi:
    image: jacobalberty/unifi:latest
    container_name: unifi
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 6789:6789/tcp
      - 8080:8080/tcp
      - 8880:8880/tcp
      - 8443:8443/tcp
      - 8843:8843/tcp
    restart: unless-stopped
    volumes:
      - /opt/unifi/data:/unifi/data:rw
      - /opt/unifi:/unifi
      - /opt/unifi/run:/var/run/unifi
      - /etc/localtime:/etc/localtime:ro

  unms:
    #image: ubnt/unms:0.13.3-rc.1
    image: oznu/unms:latest
    container_name: unms
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
      - PUBLIC_HTTPS_PORT=9443
      - PUBLIC_WS_PORT=9443
    ports:
      - 2055:2055/udp
      - 9080:80/tcp
      - 9443:443/tcp
    restart: unless-stopped
    volumes:
      - /opt/unms:/config
      - /etc/localtime:/etc/localtime:ro

  jupyterlab:
    image: bachya/jupyterlab
    container_name: jupyterlab
    build:
      context: ./jupyterlab/docker
    environment:
      JUPYTER_ENABLE_LAB: 'yes'
    ports:
      - 8888:8888
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/jupyterlab:/home/jovyan
      - /opt/homeassistant/config:/hass-config

  #MySQL/MariaDB Web Admin
  adminer:
    image: adminer
    container_name: adminer
    environment:
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    ports:
      - 8100:8080
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/adminer:/var/www/html/temp

  # phpvirtualbox:
  #   image: zensoftdevops/phpvirtualbox
  #   container_name: phpvirtualbox
  #   environment:
  #     - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
  #   network_mode: host
  #   ports:
  #     - 8181:80
  #   restart: unless-stopped
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     #- /opt/phpvirtualbox/config.php:/var/www/config.php
  #     - /opt/phpvirtualbox:/var/www

  duplicati:
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles # offset = -08:00 / DST -07:00
    image: linuxserver/duplicati
    ports:
      - 8200:8200
    restart: unless-stopped
    volumes:
      - /opt/duplicati:/config
      - /media/backup/duplicati_backups:/backups
      - /opt:/source/opt
      - /media/backup:/source/usb_drive
